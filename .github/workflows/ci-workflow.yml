name: Compilation & tests

on: [push, pull_request]

jobs:
  job_build_debug:
    name: Build debug
    runs-on: ubuntu-latest

    container:
      image: docker://ledgerhq/ledger-app-builder:1.6.1-2

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build
        run: |
          make DEBUG=1

      - name: Upload app binary
        uses: actions/upload-artifact@v2
        with:
          name: boilerplate-app-debug
          path: bin

  job_unit_test:
    name: Unit test
    needs: job_build_debug
    runs-on: ubuntu-latest

    container:
      image: docker://ledgerhq/ledger-app-builder:1.6.1-2

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Build unit tests
        run: |
          cd unit-tests/
          cmake -Bbuild -H. && make -C build && make -C build test

      - name: Generate code coverage
        run: |
          cd unit-tests/
          lcov --directory . -b "$(realpath build/)" --capture --initial -o coverage.base && \
          lcov --rc lcov_branch_coverage=1 --directory . -b "$(realpath build/)" --capture -o coverage.capture && \
          lcov --directory . -b "$(realpath build/)" --add-tracefile coverage.base --add-tracefile coverage.capture -o coverage.total && \
          lcov --directory . -b "$(realpath build/)" --remove coverage.total '*/unit-tests/*' -o coverage.total && \
          genhtml coverage.total -o coverage

      - name: Upload code coverage
        uses: actions/upload-artifact@v2
        with:
          name: code-coverage
          path: unit-tests/coverage

  job_test:
    name: Test
    needs: job_build_debug
    runs-on: ubuntu-latest

    container:
      image: docker://ledgerhq/speculos:latest
      ports:
        - 1234:1234
        - 9999:9999
        - 40000:40000
        - 41000:41000
        - 42000:42000
        - 43000:43000
      options: --entrypoint /bin/bash

    steps:
      - name: Clone
        uses: actions/checkout@v2

      - name: Download app binary
        uses: actions/download-artifact@v2
        with:
          name: boilerplate-app-debug
          path: bin

      - name: Run test
        run: |
          nohup bash -c "python /speculos/speculos.py bin/app.elf --sdk 1.6 --apdu-port 9999 --button-port 42000 --automation-port 43000 --display headless" > speculos.log 2<&1 &
          pip install -r tests/requirements.txt
          pytest

      - name: Upload Speculos log
        uses: actions/upload-artifact@v2
        with:
          name: speculos-log
          path: speculos.log

